### Update OracleIdentityCloud domain

I'll create a new user group for useers who have access to data visualizaion workbook in Oracle Analyitcs. This particular step isn't required if user group already exists.

![Create a new user group](https://github.com/zigavaupot/blogger/blob/main/embed-oac-into-apex/images/create-a-new-user-group.png?raw=true)

In the next step, newly created group is given access to the analytics instance. For this example, we are assigning ServiceAdmistirator (doesn't have to be) application role to the new group.

![Assign group to Analytics service](https://github.com/zigavaupot/blogger/blob/main/embed-oac-into-apex/images/assign-group-to-analytics-service.png?raw=true)

And finally, let's create an new application under **Integrated applications**. There are two parts to it:
* APEX application configuration and
* OAuth configuration.

When creating a new application, select Confidential application.

![Add confidential application](https://github.com/zigavaupot/blogger/blob/main/embed-oac-into-apex/images/add-confidential-application.png?raw=true)

Then follow the wizard that guides you through the process of setting a new application.

![Create Integrated application](https://github.com/zigavaupot/blogger/blob/main/embed-oac-into-apex/images/create-integrated-application.png?raw=true)

Important entries are as follows:

* Application URL in URLs section: enter APEX application URL.

![Application URL](https://github.com/zigavaupot/blogger/blob/main/embed-oac-into-apex/images/application-url.png?raw=true)

* Check *Enforce grants as authorization* in Authentication and Authorization section.

![Enforce grants as authorization](https://github.com/zigavaupot/blogger/blob/main/embed-oac-into-apex/images/enforce-grants-as-authorization.png?raw=true)

When setting up OAuth enter the following:

* Resource server configuration: check **No resource server configuration**

* Client configuration: check **Configure this applicaton as a client now**
    + check **Authorization code** checkbox
    + Redirect URL:
        ```htm
        https://<APEX instance URL>.adb.eu-frankfurt-1.oraclecloudapps.com/ords/apex_authentication.callback
        ```
    + Post-logout redirect URL: 
        ```htm
        https://<APEX instance URL>.adb.eu-frankfurt-1.oraclecloudapps.com/ords/r/apexdemo/embed-oac-into-apex-application/home
        ```
        ![Client configuration -1 ](https://github.com/zigavaupot/blogger/blob/main/embed-oac-into-apex/images/client-configuration.png?raw=true)

    + Check **Add resources** checkbox and add your analytics service in the resource list. This is needed to access API of Oracle Analytics application.

    ![Client configuration - 2](https://github.com/zigavaupot/blogger/blob/main/embed-oac-into-apex/images/client-configuration-2.png?raw=true)

There is one more thing that is important. Each application provides two variables: **Client ID** and **Client Secret**. These are required in the next step when we create **Web Credentials**.

Information about **Client ID** and **Client Secret** can be found in **OAuth Configuration** section under **General Information**.

![Client ID and Client Secret](https://github.com/zigavaupot/blogger/blob/main/embed-oac-into-apex/images/client-id-and-client-secret.png?raw=true)

### Web Credentials

In order to access other applications from APEX application, we need to create **Web Credentials** using **Client ID** and **Client Secret** created and stored in the previous step.

Navigate to the **AppBuilder** page in APEX and open **Workspace Utilities**.

![Workspace Utilities](https://github.com/zigavaupot/blogger/blob/main/embed-oac-into-apex/images/workspace-utilities.png?raw=true)

From the list of available utilities choose **Web Credentials**

![Web Credentials](https://github.com/zigavaupot/blogger/blob/main/embed-oac-into-apex/images/web-credentials.png?raw=true)

**Web Credentials** page opens. Besides *Name* and *Static ID, provide the following information:

* **Authentication Type**: choose *Basic Authentication*
* Enter *Client ID* in **Client ID or Username** field.
* Enter *Client Secret* into **Client Secrete or Password** field. Reenter **Client Secret** into **Verify Client Secrete or Password** field.

![Create Web Credentials](https://github.com/zigavaupot/blogger/blob/main/embed-oac-into-apex/images/create-web-credentials.png?raw=true)

### Create Authentication Scheme

The last step in our configuration exercise is to create an Authentication Scheme. There are several sections that require settings:

* Name

Provide **Authentication Scheme Name** and choose *Social Sing-in* for **Scheme Type**.

![Authentication Scheme - Settings](https://github.com/zigavaupot/blogger/blob/main/embed-oac-into-apex/images/authentication-scheme-settings.png?raw=true)

* Settings

Under **Settings** select **Credentials Store** that was created in the previous step in **Web Credentials** step.

Select *OpenID Connect Provider* for **Authentication Provider**

In the **Discovery URL** enter the following URL:

```htm
https://<Identity Domain URL>.identity.oraclecloud.com/.well-known/openid-configuration
```

IDCS Domain URL can be found in Identity Domain Page:

![Identity Domain URL](https://github.com/zigavaupot/blogger/blob/main/embed-oac-into-apex/images/identity-domain-url.png?raw=true)

Use Domain URL and add `/.well-known/openid-configuration` to complete **Discovery URL**.

Enter *profile* in **Scope** field, and *sub* into **Username** field.

* Post Log-in Processing

Choose *URL* for **Go to** and enter *APEX application URL* in **URL**.

![Identity Domain URL](https://github.com/zigavaupot/blogger/blob/main/embed-oac-into-apex/images/authentication-schema-post-login.png?raw=true)

### Almost Ready to go!

Now, there is only one small bit to do before going live. Still under **Shared Components**, locate **Security Attributes**.

![Security Attributes](https://github.com/zigavaupot/blogger/blob/main/embed-oac-into-apex/images/security-attributes.png?raw=true)

Update the following fields and then apply changes:

* In **Authentication** section:
    + Leave *APEX_PUBLIC_USER* as **Public User**
    + Select **Authentication Scheme** that was created in the previous step.

* In Authorization section:
    + Choose *No application autorization required* for **Authorization Scheme**
    + Choose *Custom Code* in **Source for Roles or Group Schemes**

![Apply Security Attributes](https://github.com/zigavaupot/blogger/blob/main/embed-oac-into-apex/images/apply-security-attributes.png?raw=true)

### Run APEX Application

We are now ready to go:

![Run Application](https://github.com/zigavaupot/blogger/blob/main/embed-oac-into-apex/images/run-application.png?raw=true)

or simply enter URL in browser pointing to APEX application:

```htm
https://<APEX instance URL>.adb.eu-frankfurt-1.oraclecloudapps.com/ords/r/apexdemo/embed-oac-into-apex-application/home
```

![Embed OAC into APEX Application](https://github.com/zigavaupot/blogger/blob/main/embed-oac-into-apex/images/running-application.png?raw=true)
