In a recent project, a customer required integrating visualizations from Oracle Analytics into an Oracle APEX application running within Oracle Cloud Infrastructure. This article shares my experience with this integration, highlighting useful resources and addressing some challenges I encountered along the way.

Integration is not my primary focus, so I started by reviewing Oracle's documentation. Unfortunately, there is no comprehensive "cookbook" available, which led me to explore various resources online. While many blog posts, articles, and videos exist, most are somewhat dated, though still relevant, as both products have evolved rapidly over the past few years.

Despite this, I found some excellent resources that helped me significantly. For instance, [Mike Durran's blog](https://medium.com/@insight2action) is an invaluable source for topics like this. I highly recommend his article [A Guide to Embedding Oracle Analytics into Oracle APEX](https://medium.com/oracledevs/a-guide-to-embedding-oracle-analytics-into-oracle-application-express-apex-1799f6ba4626) for a thorough understanding.

### Let's begin with Oracle Analytics first

Our starting point is a data visualization that displays the company's sales.

![CEO Dashboard](https://zigavaupot.github.io/blogger/embed-oac-into-apex/images/ceo-dashboard.png)

One important aspect to note is the **Developer options** in Oracle Analytics. Under the **Embed** tab, developers can find options that facilitate embedding analytics content into other applications, such as Oracle APEX.

To embed a specific visualization into another application, a developer can simply copy the provided HTML code to display Oracle Analytics content.

![HTML Code](https://zigavaupot.github.io/blogger/embed-oac-into-apex/images/embed-scripts.png)

The following two JavaScript snippets must be included in the HTML page, typically at the page level:

```htm
<script src="https://<your analytics instance>.analytics.ocp.oraclecloud.com/public/dv/v1/embedding/<embeddingMode>/embedding.js" type="application/javascript">
</script>
```

Pay close attention to the *embeddingMode* part of the URL, which can take two possible values: *jet* and *standalone*.

* Use *jet* if the analytics content is embedded within an existing Oracle JET application.
* Use *standalone* when embedding visualization content in a generic application that does not use Oracle JET.

When using the *standalone* option, Knockout bindings must be applied after the visualization is fully loaded. This can be done by including the following script after the `<oracle-dv>` tag or by executing it in a body onload handler:

```htm
<script>
  requirejs(['knockout', 'ojs/ojcore', 'ojs/ojknockout', 'ojs/ojcomposite', 'jet-composites/oracle-dv/loader'], function(ko) {
    ko.applyBindings();
  });
</script>
```

Finally, the `<oracle-dv>` tag is used to display the visualization canvas in the target application, which in our case is Oracle APEX. For example, to display the first canvas, use:

```htm
<oracle-dv project-path="/@Catalog/shared/Demos/CEO Dashboard (Sales)" active-page="insight" active-tab-id="snapshot!canvas!1">
</oracle-dv>
```

To display a different canvas, such as *canvas3*, update the `active-tab-id` accordingly:

```htm
<oracle-dv project-path="/@Catalog/shared/Demos/CEO Dashboard (Sales)" active-page="insight" active-tab-id="snapshot!canvas!3">
</oracle-dv>
```

**REMARKS:**

1. To open **Developer Options**, click on the Workbook Menu. The **Developer** option is the last item in the menu:

![Developer option](https://zigavaupot.github.io/blogger/embed-oac-into-apex/images/developer-options.png)

2. If the **Developer** option does not appear in the menu, Developer Options are not enabled. To enable them, click on the user icon (top right corner) and select **Profile**.

![Profile option](https://zigavaupot.github.io/blogger/embed-oac-into-apex/images/profile-option.png)

Then, navigate to the **Advanced** tab and enable **Developer options**:

![Enable developer options](https://zigavaupot.github.io/blogger/embed-oac-into-apex/images/enable-developer-options.png)
